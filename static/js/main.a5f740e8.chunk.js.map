{"version":3,"sources":["sounds/sound1.mp3","sounds/sound2.mp3","sounds/sound3.mp3","sounds/sound4.mp3","sounds/sound5.mp3","sounds/sound6.mp3","sounds/sound7.mp3","sounds/sound8.mp3","sounds/sound9.mp3","Display.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Display","state","sound","sounds","81","87","69","65","83","68","90","88","67","window","addEventListener","e","goal","keyCode","something","this","setState","props","displayThis","bind","Component","App","argument","setTimeout","audio","document","querySelector","active","currentTime","play","classList","add","remove","className","id","data-key","src","sound1","type","sound2","sound3","sound4","sound5","sound6","sound7","sound8","sound9","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a5f740e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sound1.52f8783d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sound2.b8d7845c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sound3.ddbed052.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sound4.6be0017e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sound5.11c7389f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sound6.82d21bfa.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sound7.375ae37d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sound8.3ca260e2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sound9.f3af4296.mp3\";","import React, {Component} from 'react'\n\nclass Display extends Component{\n    state = {\n        sound: ''\n    }\n\ncomponentDidMount(){\n\n    let sounds = {\n        81: \"sound 1\",\n        87: \"sound 2\",\n        69: \"sound 3\",\n        65: \"sound 4\",\n        83: \"sound 5\",\n        68: \"sound 6\",\n        90: \"sound 7\",\n        88: \"sound 8\",\n        67: \"sound 9\"\n    }\n\n    window.addEventListener('keydown', function(e){\n\n        const goal = e.keyCode\n        let something = sounds[goal]\n        this.setState({\n            sound: something \n        })\n        this.props.displayThis(this.state.sound)\n        this.setState({\n            sound: ''\n        })\n    }.bind(this))\n}\nrender(){\n    return(\n        <div>\n\n        </div>\n    )\n}\n\n}\n\nexport default Display;","import React, { Component } from 'react';\nimport sound1 from './sounds/sound1.mp3'\nimport sound2 from './sounds/sound2.mp3'\nimport sound3 from './sounds/sound3.mp3'\nimport sound4 from './sounds/sound4.mp3'\nimport sound5 from './sounds/sound5.mp3'\nimport sound6 from './sounds/sound6.mp3'\nimport sound7 from './sounds/sound7.mp3'\nimport sound8 from './sounds/sound8.mp3'\nimport sound9 from './sounds/sound9.mp3'\nimport Display from './Display'\n\n\n\nclass App extends Component{\n  state={\n    sound: ''\n  }\n\ncomponentDidMount(){\n  window.addEventListener('keydown', function(e){\n    const audio = document.querySelector(`audio[data-key=\"${e.keyCode}\"]`)\n    const active = document.querySelector(`.drumpad[data-key=\"${e.keyCode}\"]`)\n    if (!audio) return;\n    audio.currentTime = 0;\n    audio.play();\n    active.classList.add('active');\n    setTimeout(function(){\n      active.classList.remove('active')\n    }, 150)\n  }) \n  \n}\n\ndisplayThis = (argument) =>{\n  this.setState({\n    sound: argument\n  })\n  setTimeout(function(){\n    this.setState({\n      sound: ''\n    })\n  }.bind(this),150)\n}\n\n\n\n\n\nrender() {\n  \n\n      \n  return (\n    <div className=\"App\" id=\"drum-machine\">\n      <div className=\"drumpad\" data-key=\"81\"><kbd>Q</kbd></div>\n      <div className=\"drumpad\" data-key=\"87\"><kbd>W</kbd></div>\n      <div className=\"drumpad\" data-key=\"69\"><kbd>E</kbd></div>\n      <div className=\"drumpad\" data-key=\"65\"><kbd>A</kbd></div>\n      <div className=\"drumpad\" data-key=\"83\"><kbd>S</kbd></div>\n      <div className=\"drumpad\" data-key=\"68\"><kbd>D</kbd></div>\n      <div className=\"drumpad\" data-key=\"90\"><kbd>Z</kbd></div>\n      <div className=\"drumpad\" data-key=\"88\"><kbd>X</kbd></div>\n      <div className=\"drumpad\" data-key=\"67\"><kbd>C</kbd></div>\n      <audio src={sound1} type=\"audio/mpeg\"data-key=\"81\"></audio>\n      <audio src={sound2} type=\"audio/mpeg\"data-key=\"87\"></audio>\n      <audio src={sound3} type=\"audio/mpeg\"data-key=\"69\"></audio>\n      <audio src={sound4} type=\"audio/mpeg\"data-key=\"65\"></audio>\n      <audio src={sound5} type=\"audio/mpeg\"data-key=\"83\"></audio>\n      <audio src={sound6} type=\"audio/mpeg\"data-key=\"68\"></audio>\n      <audio src={sound7} type=\"audio/mpeg\"data-key=\"90\"></audio>\n      <audio src={sound8} type=\"audio/mpeg\"data-key=\"88\"></audio>\n      <audio src={sound9} type=\"audio/mpeg\"data-key=\"67\"></audio>\n      <div className=\"displayText\">{ this.state.sound }</div>\n      <Display displayThis = {this.displayThis}/>\n\n \n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}